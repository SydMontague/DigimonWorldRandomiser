package de.phoenixstaffel.dmw.randomiser;

import java.util.Random;

import de.phoenixstaffel.dmw.DigimonWorldAPI;
import de.phoenixstaffel.dmw.events.EventHandlingMethod;
import de.phoenixstaffel.dmw.events.LoadGameEvent;
import de.phoenixstaffel.dmw.events.NewGameEvent;
import de.phoenixstaffel.dmw.plugins.Plugin;
import de.phoenixstaffel.dmw.plugins.PluginProperties;


/*
 * If you want to take this code as an example... DON'T!
 * 
 * It's bad, it's honestly just really bad code. But somehow it works, this is why I use it.
 */
/*
 * Digimon
 *  Evolutions
 *      Evolution Tree
 *      Evolution requirements
 *      Evolution statsgains
 *      (evolution times)
 *      (special evolutions)
 *  Definition
 *      Raising Values
 *      General Values
 *      (Moveset)
 * Moves
 *  Values
 *  Learning Chance (Fight)
 *  Learning Chance (Brains)    <-- needs event (training start event)
 * Items
 *  price
 *  merit value
 * 
 */
public class Randomiser extends Plugin {
    private static long SEED_TOP = 0xB8FE6C;
    private static long SEED_BOTTOM = 0xB8FE74;
    
    private EvolutionsRandomiser evolutions;
    private MoveRandomiser moves;
        
    public Randomiser(DigimonWorldAPI main, PluginProperties properties, ClassLoader loader) {
        super(main, properties, loader);
    }
    
    @Override
    public void onEnable() {
        getDigimonWorld().getEventManager().registerEvents(this);
        System.out.println("Randomiser enabled");
    }
    
    @Override
    public void onDisable() {
        // TODO Auto-generated method stub
        
    }
    
    public int getSeed() {
        return (getDigimonWorld().getMemoryAccess().readShort(SEED_TOP) << 16) + getDigimonWorld().getMemoryAccess().readShort(SEED_BOTTOM);
    }
    
    public void setSeed(int seed) {
        getDigimonWorld().getMemoryAccess().writeShort(SEED_TOP, (short) (seed >> 16));
        getDigimonWorld().getMemoryAccess().writeShort(SEED_BOTTOM, (short) (seed));
    }
    
    @EventHandlingMethod
    public void onNewGame(NewGameEvent event) {
        setSeed(new Random().nextInt());
        updateAssets();
    }
    
    @EventHandlingMethod
    public void onGameLoad(LoadGameEvent event) {
        updateAssets();
    }
    
    /*
     * generate random generators seeded with random numbers generated by a Random seeded with the main seed?
     * 
     * 
     */
    private void updateAssets() {
        int seed = getSeed();

        System.out.println("Loading Seed " + seed);
        if(seed == 0)
            return; //TODO load default settings?
        
        Random random = new Random(seed);
        
        this.evolutions = new EvolutionsRandomiser(getDigimonWorld(), new Random(random.nextLong()));
        evolutions.randomiseTree();
        evolutions.randomiseStatsgains();
        evolutions.randomiseRequirements();
        System.out.println("Evolutions successfully randomised");
        
        this.moves = new MoveRandomiser(getDigimonWorld(), new Random(random.nextLong()));
        moves.randomiseValues();
        moves.randomiseLearningChances();
        System.out.println("Moves successfully randomised");
    }
}
